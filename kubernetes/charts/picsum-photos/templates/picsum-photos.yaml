apiVersion: apps/v1
kind: Deployment
metadata:
  name: picsum
spec:
  replicas: {{ .Values.picsumReplicas }}
  selector:
    matchLabels:
      app: picsum
  template:
    metadata:
      labels:
        app: picsum
      annotations:
        observability/scrape: 'true'
        observability/port: '8082'
        observability/path: '/metrics'
    spec:
      imagePullSecrets:
      - name: picsum-registry
      containers:
      - name: picsum
        image: 'registry.digitalocean.com/picsum-registry/picsum-photos@sha256:1267a48ce0e07b464e0dd6ba1790b959c0df964304c4d7fff5b730d5ae3eb145'
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 8080
        livenessProbe:
          httpGet:
            path: /health
            port: 8082
          initialDelaySeconds: 30
          timeoutSeconds: 10
          periodSeconds: 10
          failureThreshold: 6
        readinessProbe:
          httpGet:
            path: /health
            port: 8082
          initialDelaySeconds: 30
          timeoutSeconds: 10
          periodSeconds: 10
        env:
          - name: OTEL_EXPORTER_OTLP_ENDPOINT
            value: "http://grafana-agent.observability.svc:4317"
          - name: PICSUM_CACHE
            value: "redis"
          - name: PICSUM_CACHE_REDIS_ADDRESS
            value: "redis://redis-svc.default.svc:6379"
          - name: PICSUM_DATABASE_FILE_PATH
            value: /etc/image-manifest/image-manifest.json
          - name: PICSUM_HMAC_KEY
            valueFrom:
              secretKeyRef:
                name: picsum-hmac
                key: hmac_key
          {{- if .Values.picsumRootURL }}
          - name: PICSUM_ROOT_URL
            value: "{{ .Values.picsumRootURL }}"
          {{- end }}
          {{- if .Values.picsumImageServiceURL }}
          - name: PICSUM_IMAGE_SERVICE_URL
            value: "{{ .Values.picsumImageServiceURL }}"
          {{- end }}
          {{- if .Values.picsumLogLevel }}
          - name: PICSUM_LOG_LEVEL
            value: "{{ .Values.picsumLogLevel }}"
          {{- end }}
        volumeMounts:
          - name: image-manifest
            mountPath: "/etc/image-manifest"
            readOnly: true
      volumes:
      - name: image-manifest
        configMap:
          name: image-manifest

---
apiVersion: v1
kind: Service
metadata:
  name: picsum-svc
spec:
  clusterIP: None
  selector:
    app: picsum
  ports:
  - port: 8080
    name: picsum
