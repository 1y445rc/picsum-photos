apiVersion: apps/v1
kind: Deployment
metadata:
  name: image-service
spec:
  replicas: {{ .Values.imageServiceReplicas }}
  selector:
    matchLabels:
      app: image-service
  template:
    metadata:
      labels:
        app: image-service
      annotations:
        observability/scrape: 'true'
        observability/port: '8083'
        observability/path: '/metrics'
    spec:
      imagePullSecrets:
      - name: picsum-registry
      containers:
      - name: image-service
        image: 'registry.digitalocean.com/picsum-registry/image-service@sha256:07dcbdcc1b3b9bcc5579fbfb6be128b01e7bcb4f3afca2e0da7fe35faafeea3a'
        imagePullPolicy: IfNotPresent
        command: ['./image-service']
        ports:
        - containerPort: 8081
        resources:
          requests:
            memory: 512Mi
            cpu: 2
          limits:
            memory: 1Gi
            cpu: 3.75
        livenessProbe:
          httpGet:
            path: /health
            port: 8083
          initialDelaySeconds: 30
          timeoutSeconds: 10
          periodSeconds: 10
          failureThreshold: 6
        readinessProbe:
          httpGet:
            path: /health
            port: 8083
          initialDelaySeconds: 30
          timeoutSeconds: 10
          periodSeconds: 10
        env:
          - name: OTEL_EXPORTER_OTLP_ENDPOINT
            value: "http://grafana-agent.observability.svc:4317"
          - name: IMAGE_CACHE_REDIS_ADDRESS
            value: "redis://redis-svc.default.svc:6379"
          - name: IMAGE_STORAGE_SPACES_ENDPOINT
            valueFrom:
              secretKeyRef:
                name: picsum-spaces
                key: endpoint
          - name: IMAGE_STORAGE_SPACES_SPACE
            valueFrom:
              secretKeyRef:
                name: picsum-spaces
                key: space
          - name: IMAGE_STORAGE_SPACES_ACCESS_KEY
            valueFrom:
              secretKeyRef:
                name: picsum-spaces
                key: access_key
          - name: IMAGE_STORAGE_SPACES_SECRET_KEY
            valueFrom:
              secretKeyRef:
                name: picsum-spaces
                key: secret_key
          {{- if .Values.imageServiceStorageSpacesForcePathStyle }}
          - name: IMAGE_STORAGE_SPACES_FORCE_PATH_STYLE
            value: "{{ .Values.imageServiceStorageSpacesForcePathStyle }}"
          {{- end }}
          {{- if .Values.imageServiceLogLevel }}
          - name: IMAGE_LOG_LEVEL
            value: "{{ .Values.imageServiceLogLevel }}"
          {{- end }}
          - name: IMAGE_HMAC_KEY
            valueFrom:
              secretKeyRef:
                name: picsum-hmac
                key: hmac_key
      {{- if gt (int .Values.imageServiceReplicas) 1 }}
      affinity: # Only one pod per node
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                  - key: "app"
                    operator: In
                    values:
                    - image-service
              topologyKey: "kubernetes.io/hostname"
      {{- end }}
---
apiVersion: v1
kind: Service
metadata:
  name: image-service
spec:
  clusterIP: None
  selector:
    app: image-service
  ports:
  - port: 8081
    name: image-service
